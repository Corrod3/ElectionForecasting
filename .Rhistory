by = c("gender","religion.cat","AgeGroup30"))
w.GAR.Census.DDec$w.GAR.Census.DDec <- (w.GAR.Census.DDec$n.x)/w.GAR.Census.DDec$n.y
w.GAR.Census.DDec <- w.GAR.Census.DDec %>% select(-n.x, -n.y)
# assign weights to Dalia data
DaliaDec <- left_join(DaliaDec, w.GAR.Census.DDec,
by = c("gender", "religion.cat", "AgeGroup30"))
# weights for march data
w.GAR.Census.DMar <- left_join(S.GAR.Census,
S.GAR.DMar,
by = c("gender","religion.cat","AgeGroup30"))
w.GAR.Census.DMar$w.GAR.Census.DMar <- (w.GAR.Census.DMar$n.x)/w.GAR.Census.DMar$n.y
w.GAR.Census.DMar <- w.GAR.Census.DMar %>% select(-n.x, -n.y)
# assign weights to Dalia data
DaliaMar <- left_join(DaliaMar, w.GAR.Census.DMar,
by = c("gender", "religion.cat", "AgeGroup30"))
### graph with new weights ####################################################
position <- c("Union", "SPD", "Gruene", "Linke", "FDP", "AfD", "Other")
farben = c("AfD" = "#009dd1","Union" = "#222222", "FDP" = "#ffb700",
"Gruene" = "#349f29", "Linke" = "#cc35a0", "SPD" = "#ce1b1b",
"Other" = "grey")
# unweighted Dalia Poll December ##############################################
Polls <- DaliaDec %>%
filter(vote_nextelection_de != "No vote") %>%
count(vote_nextelection_de) %>%
mutate(shares = 100*n / sum(n)) %>% transpose()
colnames(Polls) <- Polls[1,]
Polls <- Polls[-1,]
Polls[,"method"] <- c("GAV.uw.DDec.count", "GAV.uw.DDec.pct")
Polls[,"date"] <- ymd(replicate(2,"2016-12-10"))
# weighted Dalia Poll December
Poll.w.DDec <- DaliaDec %>%
filter(vote_nextelection_de != "No vote") %>%
count(vote_nextelection_de, wt = w.GAV.Exit.DDec) %>%
mutate(shares = 100*n / sum(n)) %>% t() %>% as.data.frame()
colnames(Poll.w.DDec) <- as.character(unlist(Poll.w.DDec[1,]))
Poll.w.DDec <- Poll.w.DDec[-1,]
Poll.w.DDec[,"method"] <- c("GAV.w.DDec.count", "GAV.w.DDec.pct")
Poll.w.DDec[,"date"] <- ymd(replicate(2,"2016-12-10"))
# add to other polls
Polls <- rbind(Polls, Poll.w.DDec)
rm(Poll.w.DDec)
# unweighted Dalia Poll March
Poll.uw.DMar <- DaliaMar %>%
filter(vote_nextelection_de != "No vote") %>%
count(vote_nextelection_de) %>%
mutate(shares = 100*n / sum(n)) %>% t() %>% as.data.frame()
colnames(Poll.uw.DMar) <- as.character(unlist(Poll.uw.DMar[1,]))
Poll.uw.DMar <- Poll.uw.DMar[-1,]
Poll.uw.DMar[,"method"]  <- c("GAV.uw.DMar.count", "GAV.uw.DMar.pct")
Poll.uw.DMar[,"date"] <- ymd(replicate(2,"2017-03-20"))
# add to other polls
Polls <- rbind(Polls, Poll.uw.DMar)
rm(Poll.uw.DMar)
# weighted Dalia Poll March GAV ###############################################
Poll.w.DMar <- DaliaMar %>%
filter(vote_nextelection_de != "No vote") %>%
count(vote_nextelection_de, wt = w.GAV.Exit.DMar) %>%
mutate(shares = 100*n / sum(n)) %>% t() %>% as.data.frame()
colnames(Poll.w.DMar) <- as.character(unlist(Poll.w.DMar[1,]))
Poll.w.DMar <- Poll.w.DMar[-1,]
Poll.w.DMar[,"method"]  <- c("GAV.w.DMar.count", "GAV.w.DMar.pct")
Poll.w.DMar[,"date"] <- ymd(replicate(2,"2017-03-20"))
# add to other polls
Polls <- rbind(Polls, Poll.w.DMar)
rm(Poll.w.DMar)
Polls <- tibble::remove_rownames(Polls)
# weighted Dalia Poll December GAR ############################################
Poll.w.DDec.GAR <- DaliaDec %>%
filter(vote_nextelection_de != "No vote" & turnout_exp == 1) %>%
count(vote_nextelection_de, wt = w.GAR.Census.DDec) %>%
mutate(shares = 100*n / sum(n)) %>% t() %>% as.data.frame()
colnames(Poll.w.DDec.GAR) <- as.character(unlist(Poll.w.DDec.GAR[1,]))
Poll.w.DDec.GAR <- Poll.w.DDec.GAR[-1,]
Poll.w.DDec.GAR[,"method"] <- c("GAR.w.DDec.count", "GAR.w.DDec.pct")
Poll.w.DDec.GAR[,"date"] <- ymd(replicate(2,"2016-12-10"))
# add to other polls
Polls <- rbind(Polls, Poll.w.DDec.GAR)
rm(Poll.w.DDec.GAR)
# weighted Dalia Poll March GAR ############################################
Poll.w.DMar.GAR <- DaliaMar %>%
filter(vote_nextelection_de != "No vote" & turnout_exp == 1) %>%
count(vote_nextelection_de, wt = w.GAR.Census.DMar) %>%
mutate(shares = 100*n / sum(n)) %>% t() %>% as.data.frame()
colnames(Poll.w.DMar.GAR) <- as.character(unlist(Poll.w.DMar.GAR[1,]))
Poll.w.DMar.GAR <- Poll.w.DMar.GAR[-1,]
Poll.w.DMar.GAR[,"method"] <- c("GAR.w.DMar.count", "GAR.w.DMar.pct")
Poll.w.DMar.GAR[,"date"] <- ymd(replicate(2,"2016-03-20"))
# add to other polls
Polls <- rbind(Polls, Poll.w.DMar.GAR)
rm(Poll.w.DMar.GAR)
# save
save(Polls, file = "./Processed/polls.RData")
rm(list=ls())
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:/Users/Moritz/Desktop/ElectionForecasting"), silent = TRUE)
source("packages.r")
source("functions.r")
source("daliadata.R")
source("weightingdata.R") # add benchmark data
DaliaDec <- DaliaDec %>% filter(!(voted_party_last_election_de == "No vote" |
voted_party_last_election_de == "Not able" |
is.na(vote_nextelection_de) |
is.na(voted_party_last_election_de)))
DaliaMar <- DaliaMar %>% filter(!(voted_party_last_election_de == "No vote" |
voted_party_last_election_de == "Not able" |
is.na(vote_nextelection_de) |
is.na(voted_party_last_election_de)))
S.GAV.DDec <- DaliaDec %>% filter(voted_party_last_election_de != "No vote" &
voted_party_last_election_de != "Not able") %>%
droplevels() %>%  # drops unused factor "No vote" "not able"
group_by(gender, AgeGroup, voted_party_last_election_de) %>%
tally() %>% complete(nesting(gender), AgeGroup, voted_party_last_election_de)
S.GAV.DDec <- S.GAV.DDec %>% ungroup() %>%
dplyr::rename(parties = voted_party_last_election_de) %>%
mutate(parties = as.character(parties),
gender = as.character(gender))
S.GAV.DDec$n[is.na(S.GAV.DDec$n)] <- 0
S.GAV.DDec$n <- 100*(S.GAV.DDec$n/sum(S.GAV.DDec$n))
S.GAV.DMar <- DaliaMar %>% filter(vote_nextelection_de != "No vote") %>%
group_by(gender, AgeGroup, vote_nextelection_de) %>%
tally()
S.GAV.DMar$n <- 100*(S.GAV.DMar$n/sum(S.GAV.DMar$n))
load("./Processed/Vote_Age_Gender_2013.RData")
load("./Processed/Total_2013.RData")
AfD.share <- as.numeric(Total2013[8,"Zweitstimmen_pct"]/
(Total2013[8,"Zweitstimmen_pct"] +
Total2013[6,"Zweitstimmen_pct"]))
AfDrows <- data.frame(parties = rep("AfD", 3), gender = c("Total", "Male", "Female"),
"age1825" = as.numeric(rep(NA, 3)),
"age2635" = as.numeric(rep(NA, 3)),
"age3645" = as.numeric(rep(NA, 3)),
"age4660" = as.numeric(rep(NA, 3)),
"age60P" = as.numeric(rep(NA, 3)),
"gender.vote" = as.numeric(rep(NA, 3)), stringsAsFactors = FALSE)
S.GAV.Exit <- data.frame(rbind(as.matrix(VoteAgeGender.2013), as.matrix(AfDrows)),
stringsAsFactors = FALSE)
rm(AfDrows, VoteAgeGender.2013)
S.GAV.Exit[,c(3:8)] <- sapply(S.GAV.Exit[,c(3:8)], as.double)
S.GAV.Exit[S.GAV.Exit$parties == "AfD", c(3:8)] <-
S.GAV.Exit[S.GAV.Exit$parties == "Other", c(3:8)]*(AfD.share)
S.GAV.Exit[S.GAV.Exit$parties == "Other", c(3:8)] <-
S.GAV.Exit[S.GAV.Exit$parties == "Other", c(3:8)]*(1-AfD.share)
S.GAV.Exit <- S.GAV.Exit %>% mutate(parties = str_replace(parties,
"CDU|CSU",
"Union")) %>%
group_by(gender, parties) %>%
summarise_all(sum) %>% filter(gender != "Total")
S.GAV.Exit <- dplyr::select(S.GAV.Exit, -gender.vote) %>%
gather(key = "AgeGroup", value = "vote.share", starts_with("age"))
S.GAV.Exit$AgeGroup <- mapvalues(S.GAV.Exit$AgeGroup,
c("age1825.2013", "age2635.2013",
"age3645.2013", "age4660.2013",
"age60P.2013"),
c("18-25", "26-35", "36-45", "46-60", "60+"))
S.GAV.Exit$vote.share <- S.GAV.Exit$vote.share*100
S.GAV.Exit <- rename(S.GAV.Exit, vote.share.exit = vote.share)
S.GAV.DMar <- rename(S.GAV.DMar,
parties = vote_nextelection_de,
vote.share.dalia = n)
S.GAV.Exit.A4 <- S.GAV.Exit %>% mutate(AgeGroup = str_replace(AgeGroup,
"(46-60)|(60\\+)",
"45Plus")) %>%
group_by(gender, parties, AgeGroup) %>%
summarise_all(sum)
S.GAV.DDec.A4 <- S.GAV.DDec %>% ungroup %>%
mutate(AgeGroup = str_replace(AgeGroup, "(46-60)|(60\\+)", "45Plus")) %>%
group_by(gender, parties, AgeGroup) %>%
summarise_all(sum)
w.GAV.Exit.DDec <- left_join(S.GAV.Exit.A4,
S.GAV.DDec.A4,
by = c("gender","parties","AgeGroup"))
w.GAV.Exit.DDec$w.GAV.Exit.DDec <- (w.GAV.Exit.DDec$vote.share.exit)/w.GAV.Exit.DDec$n
w.GAV.Exit.DDec <- rename(w.GAV.Exit.DDec, voted_party_last_election_de = parties)
add <- w.GAV.Exit.DDec[w.GAV.Exit.DDec$AgeGroup == "45Plus",]
add <- add %>% mutate(AgeGroup = "60+")
w.GAV.Exit.DDec <- rbind(w.GAV.Exit.DDec, add)
w.GAV.Exit.DDec <- w.GAV.Exit.DDec %>% ungroup() %>%
mutate(AgeGroup = str_replace(AgeGroup,"45Plus","46-60")) %>%
select(-vote.share.exit,-n)
rm(add)
DaliaDec <- left_join(DaliaDec, w.GAV.Exit.DDec,
by = c("gender", "voted_party_last_election_de",
"AgeGroup"))
w.GAV.Exit.DMar <- left_join(S.GAV.Exit, S.GAV.DMar, by = c("gender", "parties", "AgeGroup"))
w.GAV.Exit.DMar$w.GAV.Exit.DMar <- (w.GAV.Exit.DMar$vote.share.exit)/w.GAV.Exit.DMar$vote.share.dalia
w.GAV.Exit.DMar <- w.GAV.Exit.DMar %>% rename(voted_party_last_election_de = parties) %>%
select(-vote.share.exit, -vote.share.dalia)
DaliaMar <- left_join(DaliaMar, w.GAV.Exit.DMar,
by = c("gender", "voted_party_last_election_de", "AgeGroup"))
S.GAR.DDec <- DaliaDec %>%
group_by(gender, AgeGroup30, religion.cat) %>%
tally()
S.GAR.DDec$n <- 100*(S.GAR.DDec$n/sum(S.GAR.DDec$n))
S.GAR.DMar <- DaliaMar %>%
group_by(gender, AgeGroup30, religion.cat) %>%
tally()
S.GAR.DMar$n <- 100*(S.GAR.DMar$n/sum(S.GAR.DMar$n))
S.GAR.Census <- Census.AgeGenderRel
S.GAR.Census$n <- 100*(S.GAR.Census$n/sum(S.GAR.Census$n))
w.GAR.Census.DDec <- left_join(S.GAR.Census,
S.GAR.DDec,
by = c("gender","religion.cat","AgeGroup30"))
w.GAR.Census.DDec$w.GAR.Census.DDec <- (w.GAR.Census.DDec$n.x)/w.GAR.Census.DDec$n.y
w.GAR.Census.DDec <- w.GAR.Census.DDec %>% select(-n.x, -n.y)
DaliaDec <- left_join(DaliaDec, w.GAR.Census.DDec,
by = c("gender", "religion.cat", "AgeGroup30"))
w.GAR.Census.DMar <- left_join(S.GAR.Census,
S.GAR.DMar,
by = c("gender","religion.cat","AgeGroup30"))
w.GAR.Census.DMar$w.GAR.Census.DMar <- (w.GAR.Census.DMar$n.x)/w.GAR.Census.DMar$n.y
w.GAR.Census.DMar <- w.GAR.Census.DMar %>% select(-n.x, -n.y)
DaliaMar <- left_join(DaliaMar, w.GAR.Census.DMar,
by = c("gender", "religion.cat", "AgeGroup30"))
position <- c("Union", "SPD", "Gruene", "Linke", "FDP", "AfD", "Other")
farben = c("AfD" = "#009dd1","Union" = "#222222", "FDP" = "#ffb700",
"Gruene" = "#349f29", "Linke" = "#cc35a0", "SPD" = "#ce1b1b",
"Other" = "grey")
Polls <- DaliaDec %>%
filter(vote_nextelection_de != "No vote") %>%
count(vote_nextelection_de) %>%
mutate(shares = 100*n / sum(n)) %>% transpose()
colnames(Polls) <- Polls[1,]
Polls <- Polls[-1,]
Polls[,"method"] <- c("GAV.uw.DDec.count", "GAV.uw.DDec.pct")
Polls[,"date"] <- ymd(replicate(2,"2016-12-10"))
Poll.w.DDec <- DaliaDec %>%
filter(vote_nextelection_de != "No vote") %>%
count(vote_nextelection_de, wt = w.GAV.Exit.DDec) %>%
mutate(shares = 100*n / sum(n)) %>% t() %>% as.data.frame()
colnames(Poll.w.DDec) <- as.character(unlist(Poll.w.DDec[1,]))
Poll.w.DDec <- Poll.w.DDec[-1,]
Poll.w.DDec[,"method"] <- c("GAV.w.DDec.count", "GAV.w.DDec.pct")
Poll.w.DDec[,"date"] <- ymd(replicate(2,"2016-12-10"))
Polls <- rbind(Polls, Poll.w.DDec)
rm(Poll.w.DDec)
Poll.uw.DMar <- DaliaMar %>%
filter(vote_nextelection_de != "No vote") %>%
count(vote_nextelection_de) %>%
mutate(shares = 100*n / sum(n)) %>% t() %>% as.data.frame()
colnames(Poll.uw.DMar) <- as.character(unlist(Poll.uw.DMar[1,]))
Poll.uw.DMar <- Poll.uw.DMar[-1,]
Poll.uw.DMar[,"method"]  <- c("GAV.uw.DMar.count", "GAV.uw.DMar.pct")
Poll.uw.DMar[,"date"] <- ymd(replicate(2,"2017-03-20"))
Polls <- rbind(Polls, Poll.uw.DMar)
rm(Poll.uw.DMar)
Poll.w.DMar <- DaliaMar %>%
filter(vote_nextelection_de != "No vote") %>%
count(vote_nextelection_de, wt = w.GAV.Exit.DMar) %>%
mutate(shares = 100*n / sum(n)) %>% t() %>% as.data.frame()
colnames(Poll.w.DMar) <- as.character(unlist(Poll.w.DMar[1,]))
Poll.w.DMar <- Poll.w.DMar[-1,]
Poll.w.DMar[,"method"]  <- c("GAV.w.DMar.count", "GAV.w.DMar.pct")
Poll.w.DMar[,"date"] <- ymd(replicate(2,"2017-03-20"))
Polls <- rbind(Polls, Poll.w.DMar)
rm(Poll.w.DMar)
Polls <- tibble::remove_rownames(Polls)
Poll.w.DDec.GAR <- DaliaDec %>%
filter(vote_nextelection_de != "No vote" & turnout_exp == 1) %>%
count(vote_nextelection_de, wt = w.GAR.Census.DDec) %>%
mutate(shares = 100*n / sum(n)) %>% t() %>% as.data.frame()
colnames(Poll.w.DDec.GAR) <- as.character(unlist(Poll.w.DDec.GAR[1,]))
Poll.w.DDec.GAR <- Poll.w.DDec.GAR[-1,]
Poll.w.DDec.GAR[,"method"] <- c("GAR.w.DDec.count", "GAR.w.DDec.pct")
Poll.w.DDec.GAR[,"date"] <- ymd(replicate(2,"2016-12-10"))
Polls <- rbind(Polls, Poll.w.DDec.GAR)
rm(Poll.w.DDec.GAR)
Poll.w.DMar.GAR <- DaliaMar %>%
filter(vote_nextelection_de != "No vote" & turnout_exp == 1) %>%
count(vote_nextelection_de, wt = w.GAR.Census.DMar) %>%
mutate(shares = 100*n / sum(n)) %>% t() %>% as.data.frame()
colnames(Poll.w.DMar.GAR) <- as.character(unlist(Poll.w.DMar.GAR[1,]))
Poll.w.DMar.GAR <- Poll.w.DMar.GAR[-1,]
Poll.w.DMar.GAR[,"method"] <- c("GAR.w.DMar.count", "GAR.w.DMar.pct")
Poll.w.DMar.GAR[,"date"] <- ymd(replicate(2,"2016-03-20"))
Polls <- rbind(Polls, Poll.w.DMar.GAR)
rm(Poll.w.DMar.GAR)
save(Polls, file = "./Processed/polls.RData")
View(Polls)
source("Benchmarking/tasks/config.R")
df_rolling_average_and_error <-
read.csv("Benchmarking/data/data-rolling-average-and-error.csv",
stringsAsFactors = F,
sep=",",
encoding ="utf-8")
load("Processed/polls.RData")
Polls %<>% filter(!str_detect(method ,".+count")) %>%
gather("partei", "shares", -method, -date) %>%
dplyr::rename(datum = date, pct = shares)
Polls$shares <- as.numeric(Polls$pct)/100
df_rolling_average_and_error$partei %<>%
str_replace("CDU/CSU", "Union") %>%
str_replace("Grüne", "Gruene")
df_rolling_average_and_error$datum <- as.Date(df_rolling_average_and_error$datum, "%Y-%m-%d")
df_rolling_average_and_error$ci_lower <- as.numeric(df_rolling_average_and_error$ci_lower)
df_rolling_average_and_error$ci_higher <- as.numeric(df_rolling_average_and_error$ci_higher)
df_rolling_average_and_error_party <- unique(df_rolling_average_and_error$partei)
latest_values <- arrange(df_rolling_average_and_error, desc(datum)) %>% filter(datum == datum[1])
hidden_chars <- c("\U200C","\u200D","\u200E","\u200F","\U200C","\u200D")
latest_values <- arrange(latest_values, desc(rolling_average))
latest_values <- cbind(latest_values, hidden_chars)
startDatum <- "2016-01-01"
df_rolling_average_and_error <- filter(df_rolling_average_and_error, datum > startDatum)
get_label_value <- function (partei){
index = match(partei, latest_values$partei)
label = paste0(round(latest_values$ci_lower[index]*100, digits = 0), "-", round(latest_values$ci_higher[index]*100, digits = 0), "%",latest_values$hidden_chars[index] )
label = as.character(label)
}
rolling.average.dates <- df_rolling_average_and_error %>%
filter(datum %in% ymd(c("2016-12-10", "2017-3-18", "2017-3-22"))) %>%
mutate(year = year(datum),
shares = rolling_average,
pct = shares*100) %>%
group_by(year, partei) %>%
summarize_all(mean) %>%
ungroup() %>%
select(-year, -sz_err, -rolling_average, -matches("ci_"))
rolling.average.dates$method = rep("sz.rolling.av", nrow(rolling.average.dates))
Polls <- rbind(Polls, rolling.average.dates)
Polls$pct <- round(as.numeric(Polls$pct), 1)
Polls$datum <- lubridate::month(Polls$datum, label = TRUE, abbr = FALSE)
PollsTable <- Polls %>% select(-shares) %>% spread(partei, pct)
a <- PollsTable %>%
filter(is.na(Other)) %>%
select(-method, -datum, -Other)
PollsTable[is.na(PollsTable)] <- 100-rowSums(a)
partynames <- names(PollsTable[,-c(1,2)])
PollsTable$rmse <- rep(0, nrow(PollsTable))
PollsTable <- rmse.func(PollsTable)
PollsTable.paper <- PollsTable %>%
rename(Method = method, Date = datum, RMSE = rmse) %>%
mutate(Method = str_replace(Method, "GAR.+", "GAR Census Data"),
Method = str_replace(Method, "sz.rolling.av", "SZ Rolling Average"),
Method = str_replace(Method, "GAV.uw", "Dalia Unweighted"),
Method = str_replace(Method, "GAV.w", "GAV Exit Polls"),
Method = as.factor(Method),
Date = str_replace(Date, "Mar", "March"),
Date = str_replace(Date, "Dec", "December"),
Date = as.factor(Date, levels = c("March", "December"))) %>%
select(Method, Date, Union, SPD, FDP, Gruene, Linke, AfD, Other, RMSE) %>%
arrange(Date, Method)
PollsTable.paper <- PollsTable %>%
rename(Method = method, Date = datum, RMSE = rmse) %>%
mutate(Method = str_replace(Method, "GAR.+", "GAR Census Data"),
Method = str_replace(Method, "sz.rolling.av", "SZ Rolling Average"),
Method = str_replace(Method, "GAV.uw", "Dalia Unweighted"),
Method = str_replace(Method, "GAV.w", "GAV Exit Polls"),
Method = as.factor(Method),
) %>%
select(Method, Date, Union, SPD, FDP, Gruene, Linke, AfD, Other, RMSE) %>%
arrange(Date, Method)
df_rolling_average_and_error <-
read.csv("Benchmarking/data/data-rolling-average-and-error.csv",
stringsAsFactors = F,
sep=",",
encoding ="utf-8")
load("Processed/polls.RData")
# format forecasts
Polls %<>% filter(!str_detect(method ,".+count")) %>%
gather("partei", "shares", -method, -date) %>%
dplyr::rename(datum = date, pct = shares)
Polls$shares <- as.numeric(Polls$pct)/100
# set formats
df_rolling_average_and_error$partei %<>%
str_replace("CDU/CSU", "Union") %>%
str_replace("Grüne", "Gruene")
df_rolling_average_and_error$datum <- as.Date(df_rolling_average_and_error$datum, "%Y-%m-%d")
df_rolling_average_and_error$ci_lower <- as.numeric(df_rolling_average_and_error$ci_lower)
df_rolling_average_and_error$ci_higher <- as.numeric(df_rolling_average_and_error$ci_higher)
df_rolling_average_and_error_party <- unique(df_rolling_average_and_error$partei)
latest_values <- arrange(df_rolling_average_and_error, desc(datum)) %>% filter(datum == datum[1])
hidden_chars <- c("\U200C","\u200D","\u200E","\u200F","\U200C","\u200D")
latest_values <- arrange(latest_values, desc(rolling_average))
latest_values <- cbind(latest_values, hidden_chars)
startDatum <- "2016-01-01"
df_rolling_average_and_error <- filter(df_rolling_average_and_error, datum > startDatum)
# andere Namen für die Linien als das Standardlabel
get_label_value <- function (partei){
index = match(partei, latest_values$partei)
label = paste0(round(latest_values$ci_lower[index]*100, digits = 0), "-", round(latest_values$ci_higher[index]*100, digits = 0), "%",latest_values$hidden_chars[index] )
label = as.character(label)
}
### Table #####################################################################
rolling.average.dates <- df_rolling_average_and_error %>%
filter(datum %in% ymd(c("2016-12-10", "2017-3-18", "2017-3-22"))) %>%
mutate(year = year(datum),
shares = rolling_average,
pct = shares*100) %>%
group_by(year, partei) %>%
summarize_all(mean) %>%
ungroup() %>%
select(-year, -sz_err, -rolling_average, -matches("ci_"))
rolling.average.dates$method = rep("sz.rolling.av", nrow(rolling.average.dates))
Polls <- rbind(Polls, rolling.average.dates)
Polls$pct <- round(as.numeric(Polls$pct), 1)
Polls$datum <- lubridate::month(Polls$datum, label = TRUE, abbr = FALSE)
PollsTable <- Polls %>% select(-shares) %>% spread(partei, pct)
a <- PollsTable %>%
filter(is.na(Other)) %>%
select(-method, -datum, -Other)
PollsTable[is.na(PollsTable)] <- 100-rowSums(a)
# rmse computation
partynames <- names(PollsTable[,-c(1,2)])
PollsTable$rmse <- rep(0, nrow(PollsTable))
#df <- PollsTable
PollsTable <- rmse.func(PollsTable)
PollsTable.paper <- PollsTable %>%
rename(Method = method, Date = datum, RMSE = rmse) %>%
mutate(Method = str_replace(Method, "GAR.+", "GAR Census Data"),
Method = str_replace(Method, "sz.rolling.av", "SZ Rolling Average"),
Method = str_replace(Method, "GAV.uw", "Dalia Unweighted"),
Method = str_replace(Method, "GAV.w", "GAV Exit Polls"),
Method = as.factor(Method)
) %>%
select(Method, Date, Union, SPD, FDP, Gruene, Linke, AfD, Other, RMSE) %>%
arrange(Date, Method)
View(PollsTable.paper)
df_rolling_average_and_error <-
read.csv("Benchmarking/data/data-rolling-average-and-error.csv",
stringsAsFactors = F,
sep=",",
encoding ="utf-8")
load("Processed/polls.RData")
# format forecasts
Polls %<>% filter(!str_detect(method ,".+count")) %>%
gather("partei", "shares", -method, -date) %>%
dplyr::rename(datum = date, pct = shares)
Polls$shares <- as.numeric(Polls$pct)/100
# set formats
df_rolling_average_and_error$partei %<>%
str_replace("CDU/CSU", "Union") %>%
str_replace("Grüne", "Gruene")
df_rolling_average_and_error$datum <- as.Date(df_rolling_average_and_error$datum, "%Y-%m-%d")
df_rolling_average_and_error$ci_lower <- as.numeric(df_rolling_average_and_error$ci_lower)
df_rolling_average_and_error$ci_higher <- as.numeric(df_rolling_average_and_error$ci_higher)
df_rolling_average_and_error_party <- unique(df_rolling_average_and_error$partei)
latest_values <- arrange(df_rolling_average_and_error, desc(datum)) %>% filter(datum == datum[1])
hidden_chars <- c("\U200C","\u200D","\u200E","\u200F","\U200C","\u200D")
latest_values <- arrange(latest_values, desc(rolling_average))
latest_values <- cbind(latest_values, hidden_chars)
startDatum <- "2016-01-01"
df_rolling_average_and_error <- filter(df_rolling_average_and_error, datum > startDatum)
# andere Namen für die Linien als das Standardlabel
get_label_value <- function (partei){
index = match(partei, latest_values$partei)
label = paste0(round(latest_values$ci_lower[index]*100, digits = 0), "-", round(latest_values$ci_higher[index]*100, digits = 0), "%",latest_values$hidden_chars[index] )
label = as.character(label)
}
### Table #####################################################################
rolling.average.dates <- df_rolling_average_and_error %>%
filter(datum %in% ymd(c("2016-12-10", "2017-3-18", "2017-3-22"))) %>%
mutate(year = year(datum),
shares = rolling_average,
pct = shares*100) %>%
group_by(year, partei) %>%
summarize_all(mean) %>%
ungroup() %>%
select(-year, -sz_err, -rolling_average, -matches("ci_"))
rolling.average.dates$method = rep("sz.rolling.av", nrow(rolling.average.dates))
Polls <- rbind(Polls, rolling.average.dates)
Polls$pct <- round(as.numeric(Polls$pct), 1)
Polls$datum <- lubridate::month(Polls$datum, label = TRUE, abbr = FALSE)
PollsTable <- Polls %>% select(-shares) %>% spread(partei, pct)
a <- PollsTable %>%
filter(is.na(Other)) %>%
select(-method, -datum, -Other)
PollsTable[is.na(PollsTable)] <- 100-rowSums(a)
# rmse computation
partynames <- names(PollsTable[,-c(1,2)])
PollsTable$rmse <- rep(0, nrow(PollsTable))
#df <- PollsTable
PollsTable <- rmse.func(PollsTable)
PollsTable.paper <- PollsTable %>%
rename(Method = method, Date = datum, RMSE = rmse) %>%
mutate(Method = str_replace(Method, "GAR.+", "GAR Census Data"),
Method = str_replace(Method, "sz.rolling.av", "SZ Rolling Average"),
Method = str_replace(Method, "GAV.uw", "Dalia Unweighted"),
Method = str_replace(Method, "GAV.w", "GAV Exit Polls"),
Method = as.factor(Method)
) %>%
select(Method, Date, Union, SPD, FDP, Gruene, Linke, AfD, Other, RMSE) %>%
arrange(Date, desc(Method))
PollsTable.paper <- PollsTable %>%
rename(Method = method, Date = datum, RMSE = rmse) %>%
mutate(Method = str_replace(Method, "GAR.+", "GAR Census Data"),
Method = str_replace(Method, "sz.rolling.av", "SZ Rolling Average"),
Method = str_replace(Method, "GAV.uw.+", "Dalia Unweighted"),
Method = str_replace(Method, "GAV.w.+", "GAV Exit Polls"),
Method = as.factor(Method)
) %>%
select(Method, Date, Union, SPD, FDP, Gruene, Linke, AfD, Other, RMSE) %>%
arrange(Date, desc(Method))
PollsTable.paper <- PollsTable %>%
rename(Method = method, Date = datum, RMSE = rmse) %>%
mutate(Method = str_replace(Method, "GAR.+", "GAR Census Data"),
Method = str_replace(Method, "sz.rolling.av", "SZ Rolling Average"),
Method = str_replace(Method, "GAV.uw.+", "Dalia Unweighted"),
Method = str_replace(Method, "GAV.w.+", "GAV Exit Polls"),
Method = as.factor(Method)
) %>%
select(Method, Date, Union, SPD, FDP, Gruene, Linke, AfD, Other, RMSE) %>%
arrange(desc(Date), desc(Method))
PollsTable %>%
rename(Method = method, Date = datum, RMSE = rmse) %>%
mutate(Method = str_replace(Method, "GAR.+", "GAR Census Data"),
Method = str_replace(Method, "sz.rolling.av", "SZ Rolling Average"),
Method = str_replace(Method, "GAV.uw.+", "Dalia Unweighted"),
Method = str_replace(Method, "GAV.w.+", "GAV Exit Polls"),
Method = as.factor(Method)
) %>%
select(Method, Date, Union, SPD, FDP, Gruene, Linke, AfD, Other, RMSE) %>%
arrange(desc(Date), desc(Method)) %>%
xtable()
