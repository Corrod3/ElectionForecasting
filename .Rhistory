"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
?read.csv2
?read.csv2
# Get and clean election data
# Clear Global environment
rm(list=ls())
## Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:\\Users\\Moritz\\Desktop\\ElectionForecasting"), silent = TRUE)
# Collect packages/libraries we need:
packages <- c("readxl", "dplyr", "ggplot2", "tidyr" ,"reshape2", "scales")
# package and why it is needed
# readxl: import excel files
# dyplyr: data manipulation
# ggplot: plots (e.g. density)
# tidyr: spread function
# reshape2: melt function
# scales: label transformation in ggplot
# survey: tools for survey weighting and post-stratification
# sjPlot: nice alternative plots
# install packages if not installed before
for (p in packages) {
if (p %in% installed.packages()[,1]) {
require(p, character.only=T)
}
else {
install.packages(p, repos="http://cran.rstudio.com", dependencies = TRUE)
require(p, character.only=T)
}
}
rm(p, packages)
###################################
# Get data
colnames <- c("Parties",
"age18_25_2013", "age18_25_2009",
"age26_35_2013", "age26_35_2009",
"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
sep = ";",dec =".", skip = 6, stringsAsFactors = FALSE)
str(Wahlstatistik)
# Get and clean election data
# Clear Global environment
rm(list=ls())
## Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:\\Users\\Moritz\\Desktop\\ElectionForecasting"), silent = TRUE)
# Collect packages/libraries we need:
packages <- c("readxl", "dplyr", "ggplot2", "tidyr" ,"reshape2", "scales")
# package and why it is needed
# readxl: import excel files
# dyplyr: data manipulation
# ggplot: plots (e.g. density)
# tidyr: spread function
# reshape2: melt function
# scales: label transformation in ggplot
# survey: tools for survey weighting and post-stratification
# sjPlot: nice alternative plots
# install packages if not installed before
for (p in packages) {
if (p %in% installed.packages()[,1]) {
require(p, character.only=T)
}
else {
install.packages(p, repos="http://cran.rstudio.com", dependencies = TRUE)
require(p, character.only=T)
}
}
rm(p, packages)
###################################
# Get data
colnames <- c("Parties",
"age18_25_2013", "age18_25_2009",
"age26_35_2013", "age26_35_2009",
"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
sep = ";",dec =".", skip = 6, stringsAsFactors = FALSE)
Wahlstatistik <- Wahlstatistik[c(4:11,13:20,22:29),]
colnames(Wahlstatistik) <- colnames
Wahlstatistik$gndr <- c("Total", "Total", "Total", "Total", "Total", "Total", "Total", "Total",
"Male", "Male", "Male", "Male", "Male", "Male", "Male", "Male",
"Female", "Female", "Female", "Female", "Female", "Female", "Female", "Female")
Wahlstatistik <- select(Wahlstatistik, gndr, everything())
str(Wahlstatistik)
as.numeric(unlist(Wahlstatistik[3]))
# Get and clean election data
# Clear Global environment
rm(list=ls())
## Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:\\Users\\Moritz\\Desktop\\ElectionForecasting"), silent = TRUE)
# Collect packages/libraries we need:
packages <- c("readxl", "dplyr", "ggplot2", "tidyr" ,"reshape2", "scales")
# package and why it is needed
# readxl: import excel files
# dyplyr: data manipulation
# ggplot: plots (e.g. density)
# tidyr: spread function
# reshape2: melt function
# scales: label transformation in ggplot
# survey: tools for survey weighting and post-stratification
# sjPlot: nice alternative plots
# install packages if not installed before
for (p in packages) {
if (p %in% installed.packages()[,1]) {
require(p, character.only=T)
}
else {
install.packages(p, repos="http://cran.rstudio.com", dependencies = TRUE)
require(p, character.only=T)
}
}
rm(p, packages)
###################################
# Get data
colnames <- c("Parties",
"age18_25_2013", "age18_25_2009",
"age26_35_2013", "age26_35_2009",
"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
sep = ";",dec =",", skip = 6, stringsAsFactors = FALSE)
Wahlstatistik <- Wahlstatistik[c(4:11,13:20,22:29),]
colnames(Wahlstatistik) <- colnames
Wahlstatistik$gndr <- c("Total", "Total", "Total", "Total", "Total", "Total", "Total", "Total",
"Male", "Male", "Male", "Male", "Male", "Male", "Male", "Male",
"Female", "Female", "Female", "Female", "Female", "Female", "Female", "Female")
Wahlstatistik <- select(Wahlstatistik, gndr, everything())
str(Wahlstatistik)
age18_25_2013
Wahlstatistik$age18_25_2013
# Get and clean election data
# Clear Global environment
rm(list=ls())
## Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:\\Users\\Moritz\\Desktop\\ElectionForecasting"), silent = TRUE)
# Collect packages/libraries we need:
packages <- c("readxl", "dplyr", "ggplot2", "tidyr" ,"reshape2", "scales")
# package and why it is needed
# readxl: import excel files
# dyplyr: data manipulation
# ggplot: plots (e.g. density)
# tidyr: spread function
# reshape2: melt function
# scales: label transformation in ggplot
# survey: tools for survey weighting and post-stratification
# sjPlot: nice alternative plots
# install packages if not installed before
for (p in packages) {
if (p %in% installed.packages()[,1]) {
require(p, character.only=T)
}
else {
install.packages(p, repos="http://cran.rstudio.com", dependencies = TRUE)
require(p, character.only=T)
}
}
rm(p, packages)
###################################
# Get data
colnames <- c("Parties",
"age18_25_2013", "age18_25_2009",
"age26_35_2013", "age26_35_2009",
"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
sep = ";",dec =",", skip = 6, stringsAsFactors = FALSE)
str(Wahlstatistik)
# Get and clean election data
# Clear Global environment
rm(list=ls())
## Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:\\Users\\Moritz\\Desktop\\ElectionForecasting"), silent = TRUE)
# Collect packages/libraries we need:
packages <- c("readxl", "dplyr", "ggplot2", "tidyr" ,"reshape2", "scales")
# package and why it is needed
# readxl: import excel files
# dyplyr: data manipulation
# ggplot: plots (e.g. density)
# tidyr: spread function
# reshape2: melt function
# scales: label transformation in ggplot
# survey: tools for survey weighting and post-stratification
# sjPlot: nice alternative plots
# install packages if not installed before
for (p in packages) {
if (p %in% installed.packages()[,1]) {
require(p, character.only=T)
}
else {
install.packages(p, repos="http://cran.rstudio.com", dependencies = TRUE)
require(p, character.only=T)
}
}
rm(p, packages)
###################################
# Get data
colnames <- c("Parties",
"age18_25_2013", "age18_25_2009",
"age26_35_2013", "age26_35_2009",
"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
sep = ";",dec =",", skip = 6, stringsAsFactors = FALSE)
Wahlstatistik <- Wahlstatistik[c(4:11,13:20,22:29),]
colnames(Wahlstatistik) <- colnames
Wahlstatistik$gndr <- c("Total", "Total", "Total", "Total", "Total", "Total", "Total", "Total",
"Male", "Male", "Male", "Male", "Male", "Male", "Male", "Male",
"Female", "Female", "Female", "Female", "Female", "Female", "Female", "Female")
Wahlstatistik <- select(Wahlstatistik, gndr, everything())
as.numeric(sub(",", ".", unlist(Wahlstatistik[3]), fixed = TRUE))
Wahlstatistik[3] <- as.numeric(sub(",", ".", unlist(Wahlstatistik[3]), fixed = TRUE))
# Get and clean election data
# Clear Global environment
rm(list=ls())
## Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:\\Users\\Moritz\\Desktop\\ElectionForecasting"), silent = TRUE)
# Collect packages/libraries we need:
packages <- c("readxl", "dplyr", "ggplot2", "tidyr" ,"reshape2", "scales")
# package and why it is needed
# readxl: import excel files
# dyplyr: data manipulation
# ggplot: plots (e.g. density)
# tidyr: spread function
# reshape2: melt function
# scales: label transformation in ggplot
# survey: tools for survey weighting and post-stratification
# sjPlot: nice alternative plots
# install packages if not installed before
for (p in packages) {
if (p %in% installed.packages()[,1]) {
require(p, character.only=T)
}
else {
install.packages(p, repos="http://cran.rstudio.com", dependencies = TRUE)
require(p, character.only=T)
}
}
rm(p, packages)
###################################
# Get data
colnames <- c("Parties",
"age18_25_2013", "age18_25_2009",
"age26_35_2013", "age26_35_2009",
"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
sep = ";",dec =",", skip = 6, stringsAsFactors = FALSE)
Wahlstatistik <- Wahlstatistik[c(4:11,13:20,22:29),]
colnames(Wahlstatistik) <- colnames
Wahlstatistik$gndr <- c("Total", "Total", "Total", "Total", "Total", "Total", "Total", "Total",
"Male", "Male", "Male", "Male", "Male", "Male", "Male", "Male",
"Female", "Female", "Female", "Female", "Female", "Female", "Female", "Female")
Wahlstatistik <- select(Wahlstatistik, gndr, everything())
Wahlstatistik[3] <- as.numeric(sub(",", ".", unlist(Wahlstatistik[3]), fixed = TRUE))
str(Wahlstatistik)
Wahlstatistik <- as.factor(Wahlstatistik[c(1,2)]
str(Wahlstatistik)
str(Wahlstatistik)
Wahlstatistik <- as.factor(Wahlstatistik[c(1,2)])
Wahlstatistik[2] <- as.factor(Wahlstatistik[2])
# Get and clean election data
# Clear Global environment
rm(list=ls())
## Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:\\Users\\Moritz\\Desktop\\ElectionForecasting"), silent = TRUE)
# Collect packages/libraries we need:
packages <- c("readxl", "dplyr", "ggplot2", "tidyr" ,"reshape2", "scales")
# package and why it is needed
# readxl: import excel files
# dyplyr: data manipulation
# ggplot: plots (e.g. density)
# tidyr: spread function
# reshape2: melt function
# scales: label transformation in ggplot
# survey: tools for survey weighting and post-stratification
# sjPlot: nice alternative plots
# install packages if not installed before
for (p in packages) {
if (p %in% installed.packages()[,1]) {
require(p, character.only=T)
}
else {
install.packages(p, repos="http://cran.rstudio.com", dependencies = TRUE)
require(p, character.only=T)
}
}
rm(p, packages)
###################################
# Get data Bundeswahlstatistik
# Wähler der Parteien nach Alter und Geschlecht
colnames <- c("Parties",
"age18_25_2013", "age18_25_2009",
"age26_35_2013", "age26_35_2009",
"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
sep = ";",dec =",", skip = 6, stringsAsFactors = FALSE)
Wahlstatistik <- Wahlstatistik[c(4:11,13:20,22:29),]
colnames(Wahlstatistik) <- colnames
Wahlstatistik$gndr <- c("Total", "Total", "Total", "Total", "Total", "Total", "Total", "Total",
"Male", "Male", "Male", "Male", "Male", "Male", "Male", "Male",
"Female", "Female", "Female", "Female", "Female", "Female", "Female", "Female")
Wahlstatistik <- select(Wahlstatistik, gndr, everything())
Wahlstatistik[3] <- as.numeric(sub(",", ".", unlist(Wahlstatistik[3]), fixed = TRUE))
Wahlstatistik[1] <- as.factor(unlist(Wahlstatistik[1]))
Wahlstatistik[2] <- as.factor(unlist(Wahlstatistik[2]))
str(Wahlstatistik)
# Get and clean election data
# Clear Global environment
rm(list=ls())
## Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:\\Users\\Moritz\\Desktop\\ElectionForecasting"), silent = TRUE)
# Collect packages/libraries we need:
packages <- c("readxl", "dplyr", "ggplot2", "tidyr" ,"reshape2", "scales")
# package and why it is needed
# readxl: import excel files
# dyplyr: data manipulation
# ggplot: plots (e.g. density)
# tidyr: spread function
# reshape2: melt function
# scales: label transformation in ggplot
# survey: tools for survey weighting and post-stratification
# sjPlot: nice alternative plots
# install packages if not installed before
for (p in packages) {
if (p %in% installed.packages()[,1]) {
require(p, character.only=T)
}
else {
install.packages(p, repos="http://cran.rstudio.com", dependencies = TRUE)
require(p, character.only=T)
}
}
rm(p, packages)
###################################
# Get data Bundeswahlstatistik
# Wähler der Parteien nach Alter und Geschlecht
colnames <- c("Parties",
"age18_25_2013", "age18_25_2009",
"age26_35_2013", "age26_35_2009",
"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
sep = ";",dec =",", skip = 6, stringsAsFactors = FALSE)
Wahlstatistik <- Wahlstatistik[c(4:11,13:20,22:29),]
colnames(Wahlstatistik) <- colnames
Wahlstatistik$gndr <- c("Total", "Total", "Total", "Total", "Total", "Total", "Total", "Total",
"Male", "Male", "Male", "Male", "Male", "Male", "Male", "Male",
"Female", "Female", "Female", "Female", "Female", "Female", "Female", "Female")
Wahlstatistik <- select(Wahlstatistik, gndr, everything())
Wahlstatistik[3] <- as.numeric(sub(",", ".", unlist(Wahlstatistik[3]), fixed = TRUE))
Wahlstatistik[c(1,2)] <- as.factor(unlist(Wahlstatistik[c(1,2)]))
str(Wahlstatistik)
# Get and clean election data
# Clear Global environment
rm(list=ls())
## Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:\\Users\\Moritz\\Desktop\\ElectionForecasting"), silent = TRUE)
# Collect packages/libraries we need:
packages <- c("readxl", "dplyr", "ggplot2", "tidyr" ,"reshape2", "scales")
# package and why it is needed
# readxl: import excel files
# dyplyr: data manipulation
# ggplot: plots (e.g. density)
# tidyr: spread function
# reshape2: melt function
# scales: label transformation in ggplot
# survey: tools for survey weighting and post-stratification
# sjPlot: nice alternative plots
# install packages if not installed before
for (p in packages) {
if (p %in% installed.packages()[,1]) {
require(p, character.only=T)
}
else {
install.packages(p, repos="http://cran.rstudio.com", dependencies = TRUE)
require(p, character.only=T)
}
}
rm(p, packages)
###################################
# Get data Bundeswahlstatistik
# Wähler der Parteien nach Alter und Geschlecht
colnames <- c("Parties",
"age18_25_2013", "age18_25_2009",
"age26_35_2013", "age26_35_2009",
"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
sep = ";",dec =",", skip = 6, stringsAsFactors = FALSE)
Wahlstatistik <- Wahlstatistik[c(4:11,13:20,22:29),]
colnames(Wahlstatistik) <- colnames
Wahlstatistik$gndr <- c("Total", "Total", "Total", "Total", "Total", "Total", "Total", "Total",
"Male", "Male", "Male", "Male", "Male", "Male", "Male", "Male",
"Female", "Female", "Female", "Female", "Female", "Female", "Female", "Female")
Wahlstatistik <- select(Wahlstatistik, gndr, everything())
Wahlstatistik[3] <- as.numeric(sub(",", ".", unlist(Wahlstatistik[3]), fixed = TRUE))
Wahlstatistik[,c(1:2)] <- as.factor(unlist(Wahlstatistik[,c(1:2)]))
str(Wahlstatistik)
# Get and clean election data
# Clear Global environment
rm(list=ls())
## Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Election Forecasting/ElectionForecasting"), silent = TRUE)
try(setwd("C:\\Users\\Moritz\\Desktop\\ElectionForecasting"), silent = TRUE)
# Collect packages/libraries we need:
packages <- c("readxl", "dplyr", "ggplot2", "tidyr" ,"reshape2", "scales")
# package and why it is needed
# readxl: import excel files
# dyplyr: data manipulation
# ggplot: plots (e.g. density)
# tidyr: spread function
# reshape2: melt function
# scales: label transformation in ggplot
# survey: tools for survey weighting and post-stratification
# sjPlot: nice alternative plots
# install packages if not installed before
for (p in packages) {
if (p %in% installed.packages()[,1]) {
require(p, character.only=T)
}
else {
install.packages(p, repos="http://cran.rstudio.com", dependencies = TRUE)
require(p, character.only=T)
}
}
rm(p, packages)
###################################
# Get data Bundeswahlstatistik
# Wähler der Parteien nach Alter und Geschlecht
colnames <- c("Parties",
"age18_25_2013", "age18_25_2009",
"age26_35_2013", "age26_35_2009",
"age36_45_2013", "age36_45_2009",
"age46_60_2013", "age46_60_2009",
"age61_69_2013",
"age60+_2013", "age60+_2009",
"age70+_2013")
types <- replicate(13, "numeric")
types[1] <- "factor"
Wahlstatistik <- read.csv2("C:\\Users\\Moritz\\Desktop\\ElectionForecasting\\Weitere Daten\\Bundeswahlstatistik\\Wählerschaft_der_Parteien_nach_Geschlecht_und_Alter.csv",
sep = ";",dec =",", skip = 6, stringsAsFactors = FALSE)
Wahlstatistik <- Wahlstatistik[c(4:11,13:20,22:29),]
colnames(Wahlstatistik) <- colnames
Wahlstatistik$gndr <- c("Total", "Total", "Total", "Total", "Total", "Total", "Total", "Total",
"Male", "Male", "Male", "Male", "Male", "Male", "Male", "Male",
"Female", "Female", "Female", "Female", "Female", "Female", "Female", "Female")
Wahlstatistik <- select(Wahlstatistik, gndr, everything())
Wahlstatistik[3] <- as.numeric(sub(",", ".", unlist(Wahlstatistik[3]), fixed = TRUE))
Wahlstatistik[1] <- as.factor(unlist(Wahlstatistik[1]))
Wahlstatistik[2] <- as.factor(unlist(Wahlstatistik[2]))
str(Wahlstatistik)
